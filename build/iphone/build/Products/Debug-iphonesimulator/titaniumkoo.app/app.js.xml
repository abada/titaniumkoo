// this sets the background color of the master UIView (when there are no windows/tab groups on it)
Ti.UI.setBackgroundColor('#000');

function init( callback ) {

    var data = []; //empty data array

    var feedURL = "https://www.nasa.gov/rss/dyn/earth.rss";

    //declare the http client object
    var xhr = Ti.Network.createHTTPClient();

    //define our search bar which will attach
   //to our table view
   var searchBar = Ti.UI.createSearchBar({
           showCancel:true,
           height:43,
           top:0
    });

    //print out the searchbar value whenever it changes
    searchBar.addEventListener('change', function(e){
        //search the tableview as user types
        console.log('user searching for: ' + e.value);
    });

    //when the return key is hit, remove focus from
    //our searchBar
    searchBar.addEventListener('return', function(e){
        searchBar.blur();
    });

    //when the cancel button is tapped, remove focus
    //from our searchBar
    searchBar.addEventListener('cancel', function(e){
        searchBar.blur();
    });

    //create the table view
    var tblLists = Ti.UI.createTableView({

        rowHeight : 70,
        search : searchBar,
        filterAttribute : 'filter' //here is the search filter which appears in TableViewRow

    });

    if ( Ti.Platform.name === "iPhone OS" ) {
        var p2r = Ti.UI.createRefreshControl({
            tintColor: '#000'
        });

        tblLists.refreshControl = p2r;

        p2r.addEventListener('refreshstart', function(e) {
            init(function() {
                p2r.endRefreshing();
            });
        });

    } else if ( Ti.Platform.name === "android" ) {
        winHome.addEventListener("focus", init);
    }   


    //this method will process the remote data
    xhr.onload = function() {

        var xml = this.responseXML;

        //get the item nodelist from our response xml object
        var items = xml.documentElement.getElementsByTagName("item");

        for (var i = 0, j = items.length; i < j; i++) {
            
            //create a table row
            var row = Ti.UI.createTableViewRow({
                hasChild: true,
                className: 'list-row',
                filter: items.item(i).getElementsByTagName("title").item(0).text //this is the data we want to search on (title)
            });

            //title label
            var titleLabel = Ti.UI.createLabel({
                text: items.item(i).getElementsByTagName("title").item(0).text,
                font :{fontSize:18,fontFamily:'Helvetica Neue'},
                left: 70,
                top: 5,
                height: 20,
                width: 210
            });
            row.add(titleLabel);

            //pubDate label
            var pubDateLabel = Ti.UI.createLabel({
                text: items.item(i).getElementsByTagName("pubDate").item(0).text,
				font :{fontSize:12,fontFamily:'Helvetica Neue'},
                left: 70,
                top: 25,
                height: 40,
                width: 200
            });

            if (pubDateLabel.text == '') {
                pubDateLabel.text = 'No description is available.';
            }

            row.add(pubDateLabel);

            //desc label
            var descriptionLabel = Ti.UI.createLabel({
                text: items.item(i).getElementsByTagName("description").item(0).text,
                font :{fontSize:12,justifyText:'justify',fontFamily:'Helvetica Neue'},
                left: 70,
                top: 25,
                height: 200,
                width: 200
            });

            if (descriptionLabel.text == '') {
                descriptionLabel.text = 'No description is available.';
            }

            row.add(descriptionLabel);

            //add our little icon to the left of the row
            var iconImage = Ti.UI.createImageView({
                image: 'KS_nav_ui.png',
                width: 50,
                height: 50,
                left: 10,
                top: 10 
            });
           row.add(iconImage);

           //add the table row to our data[] object
           data.push(row);

        }

        //finally, set the data property of the tableView to our
        //data[] object
        tblLists.data = data;

    };

    //open up the xml feed
    xhr.open('GET', feedURL);

    //finally, execute the call to the remote feed
    xhr.send();
    
    // create tab group
	var tabGroup = Ti.UI.createTabGroup();
	
	var winHome = Ti.UI.createWindow({
	    title :'NASA Earth',
	    backgroundColor :'#f5f5f5'
	});
	var tabHome = Ti.UI.createTab({
	    icon :'KS_nav_ui.png',
	    title :'Home',
	    window : winHome
	});
	var viewHome = Ti.UI.createView({
		top : 10,
		left : 10,
		right : 10,
		bottom : 10,
		borderRadius : 5,
		backgroundColor :'#fff'
	});
	viewHome.add(tblLists);
	winHome.add(viewHome);
	
	var winFavorite = Ti.UI.createWindow({
	    title :'Favorites',
	    backgroundColor :'#f5f5f5'
	});
	var tabFavorite = Ti.UI.createTab({
	    icon :'KS_nav_ui.png',
	    title :'Favorite',
	    window : winFavorite
	});
	var viewFavorite = Ti.UI.createView({
	    top : 10,
	    left : 10,
	    right : 10,
	    bottom : 10,
	    borderRadius : 5,
	    backgroundColor :'#fff'
	});
	var labelFavorite = Ti.UI.createLabel({
	    color :'#222',
	    text :'Welcome to Favorite',
	    font :{fontSize:20,fontFamily:'Helvetica Neue'},
	    textAlign :'center',
	    width :'auto'
	});
	viewFavorite.add(labelFavorite);
	winFavorite.add(viewFavorite);
	
	// add tab group
	tabGroup.addTab(tabHome);
	tabGroup.addTab(tabFavorite);
	
	// open tab group
	tabGroup.open();

    if ( typeof callback === 'function' ) {
        callback();
    }
    
}

init();
